<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ReparationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReparationRepository extends EntityRepository
{

 public function findByVehicule($vehicule,$operation)
{
  $qb = $this->createQueryBuilder('r')
  ->where('r.operation=:operation')
  ->andWhere('r.vehicule=:vehicule')
  ->setParameter('operation', $operation)
  ->setParameter('vehicule', $vehicule); 
   $qb->orderBy('r.dateSave', 'DESC');   
 return $qb->getQuery()->getResult();

}

 public function findLastByVehicule($vehicule,$operation)
{
  $qb = $this->createQueryBuilder('r')
  ->where('r.operation=:operation')
  ->andWhere('r.vehicule=:vehicule')
  ->setParameter('operation', $operation)
  ->setParameter('vehicule', $vehicule)
  ->orderBy('r.dateSave', 'DESC')
  ->setMaxResults(1); 
 return $qb->getQuery()->getOneOrNullResult();

}  

 public function findCoutTotal($uid,$vehicule,\Datetime $startDate,\Datetime $endDate)
{


 $qb = $this->createQueryBuilder('v')->join('v.vehicule','vh')->where('vh.info = :uid') ->setParameter('uid', $uid);
 if ($vehicule!=0) {
    $qb->andWhere('v.vehicule = :vehicule')
 ->setParameter('vehicule', $vehicule);
 }

$qb->andWhere('v.dateSave BETWEEN :debut AND :fin')->setParameter('debut', $startDate)->setParameter('fin', $endDate); 
 $qb->select('SUM(v.cout) as coutTotal');
       
 return $qb->getQuery()->getSingleScalarResult();
}
  

}
